apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: flaskapp
spec:
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: flaskapp
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: flaskapp-efs-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-0414d36c9ee3f4bef
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flaskapp-efs-pvc
  labels:
    app: flaskapp
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  labels:
    app: flaskapp
spec:
  selector:
    matchLabels:
      app: flaskapp
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      containers:
        - name: flaskapp
          image: pocverdn/objetivo2:latest
          ports:
            - containerPort: 5000
              name: flask
          env:
            - name: FLASK_ENV
              value: production
            - name: DATABASE_HOST
              value: mysql-service
            - name: DATABASE_USER
              value: root
            - name: DATABASE_PASSWORD
              value: rootpassword
            - name: DATABASE_NAME
              value: bookstore
          volumeMounts:
            - name: flaskapp-persistent-storage
              mountPath: /app/data
      volumes:
        - name: flaskapp-persistent-storage
          persistentVolumeClaim:
            claimName: flaskapp-efs-pvc
